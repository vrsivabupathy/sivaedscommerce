import{F as c}from"./form.types.js";const p={PENDING:"pending",AUTHORIZED:"authorized",PARTIALLY_AUTHORIZED:"partiallyAuthorized",RECEIVED:"received",PARTIALLY_RECEIVED:"partiallyReceived",APPROVED:"approved",PARTIALLY_APPROVED:"partiallyApproved",REJECTED:"rejected",PARTIALLY_REJECTED:"partiallyRejected",DENIED:"denied",PROCESSED_AND_CLOSED:"processedAndClosed",CLOSED:"closed"},y=i=>{const n={};return Object.keys(i).forEach(t=>{if(t.match(/_(\d+)$/)){const e=t.replace(/_\d+$/,"");n[e]=i[t]}else n[t]=i[t]}),n},R=(i,n)=>i.map(t=>({...t,id:`${t.id}_${t.fieldType}_${n+1}`,name:`${t.name}_${t.fieldType}_${n+1}`,code:`${t.code}_${t.fieldType}_${n+1}`,customUpperCode:`${t.customUpperCode}_${t.fieldType}_${n+1}`})),_=(i,n)=>i==null?void 0:i.flatMap(t=>Array.from({length:n},(a,e)=>({...t,id:`${t.id}_${t.fieldType}_${e+1}`,name:`${t.name}_${t.fieldType}_${e+1}`,code:`${t.code}_${t.fieldType}_${e+1}`,customUpperCode:`${t.customUpperCode}_${t.fieldType}_${e+1}`}))),$=i=>{const n=[],t=[];return Object.entries(i).forEach(([a,e])=>{const s=a.lastIndexOf("_"),r=a.slice(0,s),u=a.slice(s+1);u===c.MULTISELECT||u===c.SELECT?n.push({attributeCode:r,value:btoa(e)}):t.push({attributeCode:r,value:e})}),{selectedCustomAttributes:n,enteredCustomAttributes:t}},m=i=>typeof i!="string"?"":p[i]??"",l=["REJECTED","PARTIALLY_REJECTED","DENIED","UNCONFIRMED","CLOSED"],A=i=>{const n=i==null?void 0:i.returns.filter(e=>!l.includes(e.returnStatus));return((i==null?void 0:i.itemsEligibleForReturn)??[]).flatMap(e=>{let s=e.quantityShipped,r={...e,returnableQuantity:s};return e.quantityShipped===0&&(r={...r,eligibleForReturn:!1,returnableQuantity:0}),n.forEach(u=>{u.items.forEach(o=>{if((o==null?void 0:o.id)===(e==null?void 0:e.id)){const d=s-o.requestQuantity;s=Math.max(d,0),r={...r,eligibleForReturn:s!==0,returnableQuantity:s}}})}),r}).sort((e,s)=>Number(s.eligibleForReturn)-Number(e.eligibleForReturn))},C=i=>{var a;let n=[];return((a=i==null?void 0:i.returns)==null?void 0:a.filter(e=>!l.includes(e.returnStatus)).flatMap(e=>e.items||[])).forEach(e=>{if(!n.length)n.push({...e,totalQuantity:e.requestQuantity});else{const s=n.findIndex(r=>r.id===e.id);s!==-1?n[s].totalQuantity+=e.requestQuantity:n.push({...e,totalQuantity:e.requestQuantity})}}),{returnedList:n,modifyOrder:E(i.items,n)}};function E(i,n){return i.map(t=>{const a=n.find(e=>e.id===t.id);if(a){const e=t.totalQuantity-a.totalQuantity;return e===0?null:{...t,totalQuantity:e}}return t}).filter(t=>t!==null)}export{y as c,C as e,m as f,R as m,$ as n,A as o,_ as r};
